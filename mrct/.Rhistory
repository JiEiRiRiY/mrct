method = "chol")
basis.coeffs[i,] <- curve.smooth$fd$coefs
}
library(mrct)
?mrct.sparse
?mrct.rgauss
?mrct.ise
?plot.mrct
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot(mrct.y)
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot1 <- plot(mrct.y)$plot1
plot2 <- plot(mrct.y)$plot2
plot1
plot2
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot1 <- plot(mrct.y)$plot1
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot1 <- plot(mrct.y)$plot1
library(ggplot2)
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
mrct.object <- mrct.y
# Plot of the alpha-Mahalanobis distances
colormap <- colormap.w <- rep("grey",length(mrct.object$aMHD))
colormap[mrct.object$theoretical] <- "black"
colormap.w[mrct.object$theoretical.w] <- "black"
data <- data.frame("aMHD" = mrct.object$aMHD,
"col" = colormap,
"aMHD.w" = mrct.object$aMHD.w,
"col.w" = colormap.w)
data
ggplot2(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(col=col)
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(col=col)
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col))
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
labs(y = expression(alpha*"-MHD"))
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
labs(x = "index",
y = expression(alpha*"-MHD"))
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(col=col) +
labs(x = "Index",
y = expression(alpha*"-MHD"))
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
labs(x = "Index",
y = expression(alpha*"-MHD"))
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none")
ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("grey","black"))
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none")
plot1 <- ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("black","grey")) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none")
print(plot1)
plot1 <- ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("black","grey")) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none") +
geom_segment(h = mrct.object$quant)
plot1 <- ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("black","grey")) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none") +
geom_hline(intercept = mrct.object$quant)
plot1 <- ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("black","grey")) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none") +
geom_hline(yntercept = mrct.object$quant)
plot1 <- ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
geom_point(aes(col=col)) +
scale_color_manual(values = c("black","grey")) +
labs(x = "Index",
y = expression(alpha*"-MHD")) +
theme(legend.position = "none") +
geom_hline(yintercept = mrct.object$quant)
print(plot1)
plot1 <- ggplot2::ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
ggplot2::geom_point(aes(col=col)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression(alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant)
plot2 <- ggplot2::ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD.w)) +
ggplot2::geom_point(aes(col=col.w)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression("weighted "*alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant.w)
list("plot1"=plot1,
"plot2"=plot2)
library(mrct)
?plot.mrct
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
plot of chunk example-mrct-plot.mrct-1
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot(mrct.y)
mrct.object <- mrct.y
# Plot of the alpha-Mahalanobis distances
colormap <- colormap.w <- rep(1,length(mrct.object$aMHD))
colormap[mrct.object$theoretical] <- 2
colormap.w[mrct.object$theoretical.w] <- 2
data <- data.frame("aMHD" = mrct.object$aMHD,
"col" = colormap,
"aMHD.w" = mrct.object$aMHD.w,
"col.w" = colormap.w)
plot1 <- ggplot2::ggplot(data = data, aes(x = 1:dim(data)[1],
y = aMHD)) +
ggplot2::geom_point(aes(col=col)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression(alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant)
mrct.y
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
class(mrct.y)
plot(mrct.y)
#'         col=colormap, xlab="t",ylab="")
#'
#' # Run MRCT
#' mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
#'                initializations=10, criterion="sum")
#'
#' # Visualize alpha-Mahalanobis distance
#' # Colorinfromation according to estimated outliers (grey regular, black irregular)
#' plot(mrct.y)
#' @export
plot.mrct <- function(mrct.object){
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot(mrct.y)
1
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
library(mrct)
?plot.mrcrt
?plot.mrct
library(mrct)
?plot.mrct
ggplot2::eas()
ggplot2::aes()
library(mrct)
?plot.mrct
library(mrct)
?plot.mrct
library(mrct)
?plot.mrct
# Similar to example in mrct() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50, size=10)
# Generate 50 curves on the interval [0,1] at 50 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=50), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x=seq(0,1,length.out=50), y=t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run MRCT
mrct.y <- mrct(data=y, h=0.75, alpha=0.1,
initializations=10, criterion="sum")
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot(mrct.y)
# Visualize alpha-Mahalanobis distance
# Colorinfromation according to estimated outliers (grey regular, black irregular)
plot23 <- plot(mrct.y)
plot23$plot1
plot23$plot2
# Similar to example in mrct.sparse() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50,size=10)
# Generate 50 sparse curves on the interval [0,1] at 10 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=10), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x = seq(0,1,length.out=10), y = t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run sparse MRCT
sparse.mrct.y <- mrct.sparse(data = y, nbasis = 10, h = 0.75, rangeval = 1:10, new.p = 50,
alpha = 0.1, initializations = 10, criterion = "sum" )
# Run sparse MRCT
sparse.mrct.y <- mrct.sparse(data = y, nbasis = 10, h = 0.75,new.p = 50,
alpha = 0.1, initializations = 10, criterion = "sum" )
mrct.sparse.object <- mrct.y
# Run sparse MRCT
sparse.mrct.y <- mrct.sparse(data = y, nbasis = 10, h = 0.75,new.p = 50,
alpha = 0.1, initializations = 10, criterion = "sum" )
mrct.sparse.object <- sparse.mrct.y
plot(sparse.mrct.y)
plot(mrct.sparse.objectsparse.mrct.y)
plot(mrct.sparse.object=sparse.mrct.y)
mrct.object <- mrct.sparse.object[[1]]
# Plot of the alpha-Mahalanobis distances
colormap <- colormap.w <- rep("grey",length(mrct.object$aMHD))
colormap[mrct.object$theoretical] <- "black"
colormap.w[mrct.object$theoretical.w] <- "black"
data <- data.frame("aMHD" = mrct.object$aMHD,
"col" = colormap,
"aMHD.w" = mrct.object$aMHD.w,
"col.w" = colormap.w)
plot1 <- ggplot2::ggplot(data = data, ggplot2::aes(x = 1:dim(data)[1],
y = aMHD)) +
ggplot2::geom_point(ggplot2::aes(col=col)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression(alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant)
plot2 <- ggplot2::ggplot(data = data, ggplot2::aes(x = 1:dim(data)[1],
y = aMHD.w)) +
ggplot2::geom_point(ggplot2::aes(col=col.w)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression("weighted "*alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant.w)
plot1
plot2
# Plot smoothed curves
# Colors correspond to estimated outlier information (grey regular, black irregular)
curves <- mrct.sparse.object[[2]]
data <- melt(curves)
data <- reshape2::melt(curves)
data
ggplot2::ggplot(data = data, aes(x = Var2,
y = value)) +
ggplot2::geom_line(aes(col = Var1))
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value)) +
ggplot2::geom_line(ggplot2::aes(col = Var1))
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t")
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "")
x = seq(0,1,length.out=dim(mrct.sparse.object[[2]])[2])
ggplot2::ggplot(data = data, ggplot2::aes(x = x,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "")
data
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "") +
ggplot2::scale_x_continuous(labels = x)
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "")
floor(length(x)/6)
x.label <- c(x[1],x[1+x.cut],x[1+2*x.cut],x[1+3*x.cut],x[+4*x.cut],x[length(x)])
x.cut <- floor(length(x)/6)
x.label <- c(x[1],x[1+x.cut],x[1+2*x.cut],x[1+3*x.cut],x[+4*x.cut],x[length(x)])
x.label
x.label <- round(c(x[1],x[1+x.cut],x[1+2*x.cut],x[1+3*x.cut],x[+4*x.cut],x[length(x)]),2)
ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "") +
ggplot2::scale_x_continuous(labels = x.label)
library(mrct)
?plot.mrctsparse
library(mrct)
?plot.mrctsparse
# Similar to example in mrct.sparse() helpfile
# Fix seed for reproducibility
set.seed(123)
# Sample outlying indices
cont.ind <- sample(1:50,size=10)
# Generate 50 sparse curves on the interval [0,1] at 10 timepoints with 20% outliers
y <- mrct.rgauss(x.grid=seq(0,1,length.out=10), N=50, model=1,
outliers=cont.ind, method="linear")
# Visualize curves (regular curves grey, outliers black)
colormap <- rep("grey",50); colormap[cont.ind] <- "black"
matplot(x = seq(0,1,length.out=10), y = t(y), type="l", lty="solid",
col=colormap, xlab="t",ylab="")
# Run sparse MRCT
sparse.mrct.y <- mrct.sparse(data = y, nbasis = 10, h = 0.75,new.p = 50,
alpha = 0.1, initializations = 10, criterion = "sum" )
# Visualize alpha-Mahalanobis distances and smoothed curves
# Colorinformation according to estimated outliers (grey regular, black irregular)
plot(mrct.sparse.object = sparse.mrct.y)
mrct.sparse.object <- sparse.mrct.y
mrct.object <- mrct.sparse.object[[1]]
# Plot of the alpha-Mahalanobis distances
colormap <- colormap.w <- rep("grey",length(mrct.object$aMHD))
colormap[mrct.object$theoretical] <- "black"
colormap.w[mrct.object$theoretical.w] <- "black"
data <- data.frame("aMHD" = mrct.object$aMHD,
"col" = colormap,
"aMHD.w" = mrct.object$aMHD.w,
"col.w" = colormap.w)
plot1 <- ggplot2::ggplot(data = data, ggplot2::aes(x = 1:dim(data)[1],
y = aMHD)) +
ggplot2::geom_point(ggplot2::aes(col=col)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression(alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant)
plot2 <- ggplot2::ggplot(data = data, ggplot2::aes(x = 1:dim(data)[1],
y = aMHD.w)) +
ggplot2::geom_point(ggplot2::aes(col=col.w)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression("weighted "*alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant.w)
# Plot smoothed curves
# Colors correspond to estimated outlier information (grey regular, black irregular)
curves <- mrct.sparse.object[[2]]
data <- reshape2::melt(curves)
x.cut <- floor(length(x)/6)
x.label <- round(c(x[1],x[1+x.cut],x[1+2*x.cut],x[1+3*x.cut],x[+4*x.cut],x[length(x)]),2)
plot3 <- ggplot2::ggplot(data = data, ggplot2::aes(x = Var2,
y = value,
fill = Var1)) +
ggplot2::geom_line(col = "grey") +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = "t",
y = "") +
ggplot2::scale_x_continuous(labels = x.label)
plot1
plot2
plot3
data <- data.frame("aMHD" = mrct.object$aMHD,
"col" = colormap,
"aMHD.w" = mrct.object$aMHD.w,
"col.w" = colormap.w)
plot1 <- ggplot2::ggplot(data = data, ggplot2::aes(x = 1:dim(data)[1],
y = aMHD)) +
ggplot2::geom_point(ggplot2::aes(col=col)) +
ggplot2::scale_color_manual(values = c("black","grey")) +
ggplot2::labs(x = "Index",
y = expression(alpha*"-MHD")) +
ggplot2::theme(legend.position = "none") +
ggplot2::geom_hline(yintercept = mrct.object$quant)
plot1
library(mrct)
?plot.mrctsparse
library(roxygen2)
roxygenise()
devtools::check()
devtools::check()
library(mrct)
check()
devtools::check()
